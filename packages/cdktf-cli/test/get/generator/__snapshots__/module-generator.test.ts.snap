// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generate multiple aws modules 1`] = `
"// generated by cdktf get
// terraform-aws-modules/vpc/aws
import { TerraformModule } from 'cdktf';
import { Construct } from 'constructs';
export interface TerraformAwsModulesVpcAwsOptions {
  /**
   * Determines whether major engine upgrades are allowed when changing engine version
   */
  readonly allowMajorVersionUpgrade?: boolean;
  /**
   * A list of CIDR blocks which are allowed to access the database
   * @default 
   */
  readonly allowedCidrBlocks?: string[];
  /**
   * A list of Security Group ID's to allow access to
   * @default 
   */
  readonly allowedSecurityGroups?: string[];
  /**
   * Determines whether or not any DB modifications are applied immediately, or during the maintenance window
   */
  readonly applyImmediately?: boolean;
  /**
   * Determines whether minor engine upgrades will be performed automatically in the maintenance window
   * @default true
   */
  readonly autoMinorVersionUpgrade?: boolean;
  /**
   * The target backtrack window, in seconds. Only available for aurora engine currently. To disable backtracking, set this value to 0. Must be between 0 and 259200 (72 hours)
   */
  readonly backtrackWindow?: number;
  /**
   * How long to keep backups for (in days)
   * @default 7
   */
  readonly backupRetentionPeriod?: number;
  /**
   * The identifier of the CA certificate for the DB instance
   * @default rds-ca-2019
   */
  readonly caCertIdentifier?: string;
  /**
   * A map of tags to add to only the RDS cluster. Used for AWS Instance Scheduler tagging
   * @default [object Object]
   */
  readonly clusterTags?: { [key: string]: string };
  /**
   * Copy all Cluster tags to snapshots
   */
  readonly copyTagsToSnapshot?: boolean;
  /**
   * Whether cluster should be created (it affects almost all resources)
   * @default true
   */
  readonly createCluster?: boolean;
  /**
   * Whether to create the IAM role for RDS enhanced monitoring
   * @default true
   */
  readonly createMonitoringRole?: boolean;
  /**
   * Whether to create random password for RDS primary cluster
   * @default true
   */
  readonly createRandomPassword?: boolean;
  /**
   * Whether to create security group for RDS cluster
   * @default true
   */
  readonly createSecurityGroup?: boolean;
  /**
   * Name for an automatically created database on cluster creation
   */
  readonly databaseName?: string;
  /**
   * The name of a DB Cluster parameter group to use
   */
  readonly dbClusterParameterGroupName?: string;
  /**
   * The name of a DB parameter group to use
   */
  readonly dbParameterGroupName?: string;
  /**
   * The existing subnet group name to use
   */
  readonly dbSubnetGroupName?: string;
  /**
   * If the DB instance should have deletion protection enabled
   */
  readonly deletionProtection?: boolean;
  /**
   * Whether or not to enable the Data API for a serverless Aurora database engine
   */
  readonly enableHttpEndpoint?: boolean;
  /**
   * List of log types to export to cloudwatch - \`audit\`, \`error\`, \`general\`, \`slowquery\`, \`postgresql\`
   * @default 
   */
  readonly enabledCloudwatchLogsExports?: string[];
  /**
   * Aurora database engine type, currently aurora, aurora-mysql or aurora-postgresql
   * @default aurora
   */
  readonly engine?: string;
  /**
   * The database engine mode. Valid values: global, parallelquery, provisioned, serverless, multimaster
   * @default provisioned
   */
  readonly engineMode?: string;
  /**
   * Aurora database engine version
   * @default 5.6.10a
   */
  readonly engineVersion?: string;
  /**
   * The prefix name to use when creating a final snapshot on cluster destroy, appends a random 8 digits to name to ensure it's unique too.
   * @default final
   */
  readonly finalSnapshotIdentifierPrefix?: string;
  /**
   * The global cluster identifier specified on aws_rds_global_cluster
   */
  readonly globalClusterIdentifier?: string;
  /**
   * Specifies whether IAM Database authentication should be enabled or not. Not all versions and instances are supported. Refer to the AWS documentation to see which versions are supported
   */
  readonly iamDatabaseAuthenticationEnabled?: boolean;
  /**
   * Description of the role
   */
  readonly iamRoleDescription?: string;
  /**
   * Whether to force detaching any policies the role has before destroying it
   */
  readonly iamRoleForceDetachPolicies?: boolean;
  /**
   * Set of exclusive IAM managed policy ARNs to attach to the IAM role
   */
  readonly iamRoleManagedPolicyArns?: string[];
  /**
   * Maximum session duration (in seconds) that you want to set for the role
   */
  readonly iamRoleMaxSessionDuration?: number;
  /**
   * Friendly name of the role
   */
  readonly iamRoleName?: string;
  /**
   * Path to the role
   */
  readonly iamRolePath?: string;
  /**
   * The ARN of the policy that is used to set the permissions boundary for the role
   */
  readonly iamRolePermissionsBoundary?: string;
  /**
   * Whether to use \`iam_role_name\` as is or create a unique name beginning with the \`iam_role_name\` as the prefix
   */
  readonly iamRoleUseNamePrefix?: boolean;
  /**
   * A List of ARNs for the IAM roles to associate to the RDS Cluster
   * @default 
   */
  readonly iamRoles?: string[];
  /**
   * Instance type to use at master instance. If instance_type_replica is not set it will use the same type for replica instances
   */
  readonly instanceType?: string;
  /**
   * Instance type to use at replica instance
   */
  readonly instanceTypeReplica?: string;
  /**
   * Customized instance settings. Supported keys: \`instance_name\`, \`instance_type\`, \`instance_promotion_tier\`, \`publicly_accessible\`
   * @default 
   */
  readonly instancesParameters?: { [key: string]: string }[];
  /**
   * Whether to create a primary cluster (set to false to be a part of a Global database)
   * @default true
   */
  readonly isPrimaryCluster?: boolean;
  /**
   * The ARN for the KMS encryption key if one is set to the cluster
   */
  readonly kmsKeyId?: string;
  /**
   * The interval (seconds) between points when Enhanced Monitoring metrics are collected
   */
  readonly monitoringInterval?: number;
  /**
   * IAM role used by RDS to send enhanced monitoring metrics to CloudWatch
   */
  readonly monitoringRoleArn?: string;
  /**
   * Name used across resources created
   */
  readonly name?: string;
  /**
   * Master DB password. Note - when specifying a value here, 'create_random_password' should be set to \`false\`
   */
  readonly password?: string;
  /**
   * Specifies whether Performance Insights is enabled or not
   */
  readonly performanceInsightsEnabled?: boolean;
  /**
   * The ARN for the KMS key to encrypt Performance Insights data
   */
  readonly performanceInsightsKmsKeyId?: string;
  /**
   * The port on which to accept connections
   */
  readonly port?: string;
  /**
   * The metric type to scale on. Valid values are RDSReaderAverageCPUUtilization and RDSReaderAverageDatabaseConnections
   * @default RDSReaderAverageCPUUtilization
   */
  readonly predefinedMetricType?: string;
  /**
   * When to perform DB backups
   * @default 02:00-03:00
   */
  readonly preferredBackupWindow?: string;
  /**
   * When to perform DB maintenance
   * @default sun:05:00-sun:06:00
   */
  readonly preferredMaintenanceWindow?: string;
  /**
   * Whether the DB should have a public IP address
   */
  readonly publiclyAccessible?: boolean;
  /**
   * Number of reader nodes to create.  If \`replica_scale_enable\` is \`true\`, the value of \`replica_scale_min\` is used instead.
   * @default 1
   */
  readonly replicaCount?: number;
  /**
   * Average number of connections threshold which will initiate autoscaling. Default value is 70% of db.r4.large's default max_connections
   * @default 700
   */
  readonly replicaScaleConnections?: number;
  /**
   * CPU threshold which will initiate autoscaling
   * @default 70
   */
  readonly replicaScaleCpu?: number;
  /**
   * Whether to enable autoscaling for RDS Aurora (MySQL) read replicas
   */
  readonly replicaScaleEnabled?: boolean;
  /**
   * Cooldown in seconds before allowing further scaling operations after a scale in
   * @default 300
   */
  readonly replicaScaleInCooldown?: number;
  /**
   * Maximum number of read replicas permitted when autoscaling is enabled
   */
  readonly replicaScaleMax?: number;
  /**
   * Minimum number of read replicas permitted when autoscaling is enabled
   * @default 2
   */
  readonly replicaScaleMin?: number;
  /**
   * Cooldown in seconds before allowing further scaling operations after a scale out
   * @default 300
   */
  readonly replicaScaleOutCooldown?: number;
  /**
   * ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica
   */
  readonly replicationSourceIdentifier?: string;
  /**
   * Configuration map used to restore from a Percona Xtrabackup in S3 (only MySQL is supported)
   */
  readonly s3Import?: { [key: string]: string };
  /**
   * Map of nested attributes with scaling properties. Only valid when engine_mode is set to \`serverless\`
   * @default [object Object]
   */
  readonly scalingConfiguration?: { [key: string]: string };
  /**
   * The description of the security group. If value is set to empty string it will contain cluster name in the description
   * @default Managed by Terraform
   */
  readonly securityGroupDescription?: string;
  /**
   * Additional tags for the security group
   * @default [object Object]
   */
  readonly securityGroupTags?: { [key: string]: string };
  /**
   * Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created.
   */
  readonly skipFinalSnapshot?: boolean;
  /**
   * DB snapshot to create this database from
   */
  readonly snapshotIdentifier?: string;
  /**
   * The source region for an encrypted replica DB cluster
   */
  readonly sourceRegion?: string;
  /**
   * Specifies whether the underlying storage layer should be encrypted
   * @default true
   */
  readonly storageEncrypted?: boolean;
  /**
   * List of subnet IDs used by database subnet group created
   * @default 
   */
  readonly subnets?: string[];
  /**
   * A map of tags to add to all resources.
   * @default [object Object]
   */
  readonly tags?: { [key: string]: string };
  /**
   * Master DB username
   * @default root
   */
  readonly username?: string;
  /**
   * VPC ID
   */
  readonly vpcId?: string;
  /**
   * List of VPC security groups to associate to the cluster in addition to the SG we create in this module
   * @default 
   */
  readonly vpcSecurityGroupIds?: string[];
}
export class TerraformAwsModulesVpcAws extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, options: TerraformAwsModulesVpcAwsOptions = {}) {
    super(scope, id, {
      source: 'terraform-aws-modules/vpc/aws',
      version: '2.78.0',
    });
    this.allowMajorVersionUpgrade = options.allowMajorVersionUpgrade;
    this.allowedCidrBlocks = options.allowedCidrBlocks;
    this.allowedSecurityGroups = options.allowedSecurityGroups;
    this.applyImmediately = options.applyImmediately;
    this.autoMinorVersionUpgrade = options.autoMinorVersionUpgrade;
    this.backtrackWindow = options.backtrackWindow;
    this.backupRetentionPeriod = options.backupRetentionPeriod;
    this.caCertIdentifier = options.caCertIdentifier;
    this.clusterTags = options.clusterTags;
    this.copyTagsToSnapshot = options.copyTagsToSnapshot;
    this.createCluster = options.createCluster;
    this.createMonitoringRole = options.createMonitoringRole;
    this.createRandomPassword = options.createRandomPassword;
    this.createSecurityGroup = options.createSecurityGroup;
    this.databaseName = options.databaseName;
    this.dbClusterParameterGroupName = options.dbClusterParameterGroupName;
    this.dbParameterGroupName = options.dbParameterGroupName;
    this.dbSubnetGroupName = options.dbSubnetGroupName;
    this.deletionProtection = options.deletionProtection;
    this.enableHttpEndpoint = options.enableHttpEndpoint;
    this.enabledCloudwatchLogsExports = options.enabledCloudwatchLogsExports;
    this.engine = options.engine;
    this.engineMode = options.engineMode;
    this.engineVersion = options.engineVersion;
    this.finalSnapshotIdentifierPrefix = options.finalSnapshotIdentifierPrefix;
    this.globalClusterIdentifier = options.globalClusterIdentifier;
    this.iamDatabaseAuthenticationEnabled = options.iamDatabaseAuthenticationEnabled;
    this.iamRoleDescription = options.iamRoleDescription;
    this.iamRoleForceDetachPolicies = options.iamRoleForceDetachPolicies;
    this.iamRoleManagedPolicyArns = options.iamRoleManagedPolicyArns;
    this.iamRoleMaxSessionDuration = options.iamRoleMaxSessionDuration;
    this.iamRoleName = options.iamRoleName;
    this.iamRolePath = options.iamRolePath;
    this.iamRolePermissionsBoundary = options.iamRolePermissionsBoundary;
    this.iamRoleUseNamePrefix = options.iamRoleUseNamePrefix;
    this.iamRoles = options.iamRoles;
    this.instanceType = options.instanceType;
    this.instanceTypeReplica = options.instanceTypeReplica;
    this.instancesParameters = options.instancesParameters;
    this.isPrimaryCluster = options.isPrimaryCluster;
    this.kmsKeyId = options.kmsKeyId;
    this.monitoringInterval = options.monitoringInterval;
    this.monitoringRoleArn = options.monitoringRoleArn;
    this.name = options.name;
    this.password = options.password;
    this.performanceInsightsEnabled = options.performanceInsightsEnabled;
    this.performanceInsightsKmsKeyId = options.performanceInsightsKmsKeyId;
    this.port = options.port;
    this.predefinedMetricType = options.predefinedMetricType;
    this.preferredBackupWindow = options.preferredBackupWindow;
    this.preferredMaintenanceWindow = options.preferredMaintenanceWindow;
    this.publiclyAccessible = options.publiclyAccessible;
    this.replicaCount = options.replicaCount;
    this.replicaScaleConnections = options.replicaScaleConnections;
    this.replicaScaleCpu = options.replicaScaleCpu;
    this.replicaScaleEnabled = options.replicaScaleEnabled;
    this.replicaScaleInCooldown = options.replicaScaleInCooldown;
    this.replicaScaleMax = options.replicaScaleMax;
    this.replicaScaleMin = options.replicaScaleMin;
    this.replicaScaleOutCooldown = options.replicaScaleOutCooldown;
    this.replicationSourceIdentifier = options.replicationSourceIdentifier;
    this.s3Import = options.s3Import;
    this.scalingConfiguration = options.scalingConfiguration;
    this.securityGroupDescription = options.securityGroupDescription;
    this.securityGroupTags = options.securityGroupTags;
    this.skipFinalSnapshot = options.skipFinalSnapshot;
    this.snapshotIdentifier = options.snapshotIdentifier;
    this.sourceRegion = options.sourceRegion;
    this.storageEncrypted = options.storageEncrypted;
    this.subnets = options.subnets;
    this.tags = options.tags;
    this.username = options.username;
    this.vpcId = options.vpcId;
    this.vpcSecurityGroupIds = options.vpcSecurityGroupIds;
  }
  public get allowMajorVersionUpgrade(): boolean | undefined {
    return this.inputs['allow_major_version_upgrade'] as boolean | undefined;
  }
  public set allowMajorVersionUpgrade(value: boolean | undefined) {
    this.inputs['allow_major_version_upgrade'] = value;
  }
  public get allowedCidrBlocks(): string[] | undefined {
    return this.inputs['allowed_cidr_blocks'] as string[] | undefined;
  }
  public set allowedCidrBlocks(value: string[] | undefined) {
    this.inputs['allowed_cidr_blocks'] = value;
  }
  public get allowedSecurityGroups(): string[] | undefined {
    return this.inputs['allowed_security_groups'] as string[] | undefined;
  }
  public set allowedSecurityGroups(value: string[] | undefined) {
    this.inputs['allowed_security_groups'] = value;
  }
  public get applyImmediately(): boolean | undefined {
    return this.inputs['apply_immediately'] as boolean | undefined;
  }
  public set applyImmediately(value: boolean | undefined) {
    this.inputs['apply_immediately'] = value;
  }
  public get autoMinorVersionUpgrade(): boolean | undefined {
    return this.inputs['auto_minor_version_upgrade'] as boolean | undefined;
  }
  public set autoMinorVersionUpgrade(value: boolean | undefined) {
    this.inputs['auto_minor_version_upgrade'] = value;
  }
  public get backtrackWindow(): number | undefined {
    return this.inputs['backtrack_window'] as number | undefined;
  }
  public set backtrackWindow(value: number | undefined) {
    this.inputs['backtrack_window'] = value;
  }
  public get backupRetentionPeriod(): number | undefined {
    return this.inputs['backup_retention_period'] as number | undefined;
  }
  public set backupRetentionPeriod(value: number | undefined) {
    this.inputs['backup_retention_period'] = value;
  }
  public get caCertIdentifier(): string | undefined {
    return this.inputs['ca_cert_identifier'] as string | undefined;
  }
  public set caCertIdentifier(value: string | undefined) {
    this.inputs['ca_cert_identifier'] = value;
  }
  public get clusterTags(): { [key: string]: string } | undefined {
    return this.inputs['cluster_tags'] as { [key: string]: string } | undefined;
  }
  public set clusterTags(value: { [key: string]: string } | undefined) {
    this.inputs['cluster_tags'] = value;
  }
  public get copyTagsToSnapshot(): boolean | undefined {
    return this.inputs['copy_tags_to_snapshot'] as boolean | undefined;
  }
  public set copyTagsToSnapshot(value: boolean | undefined) {
    this.inputs['copy_tags_to_snapshot'] = value;
  }
  public get createCluster(): boolean | undefined {
    return this.inputs['create_cluster'] as boolean | undefined;
  }
  public set createCluster(value: boolean | undefined) {
    this.inputs['create_cluster'] = value;
  }
  public get createMonitoringRole(): boolean | undefined {
    return this.inputs['create_monitoring_role'] as boolean | undefined;
  }
  public set createMonitoringRole(value: boolean | undefined) {
    this.inputs['create_monitoring_role'] = value;
  }
  public get createRandomPassword(): boolean | undefined {
    return this.inputs['create_random_password'] as boolean | undefined;
  }
  public set createRandomPassword(value: boolean | undefined) {
    this.inputs['create_random_password'] = value;
  }
  public get createSecurityGroup(): boolean | undefined {
    return this.inputs['create_security_group'] as boolean | undefined;
  }
  public set createSecurityGroup(value: boolean | undefined) {
    this.inputs['create_security_group'] = value;
  }
  public get databaseName(): string | undefined {
    return this.inputs['database_name'] as string | undefined;
  }
  public set databaseName(value: string | undefined) {
    this.inputs['database_name'] = value;
  }
  public get dbClusterParameterGroupName(): string | undefined {
    return this.inputs['db_cluster_parameter_group_name'] as string | undefined;
  }
  public set dbClusterParameterGroupName(value: string | undefined) {
    this.inputs['db_cluster_parameter_group_name'] = value;
  }
  public get dbParameterGroupName(): string | undefined {
    return this.inputs['db_parameter_group_name'] as string | undefined;
  }
  public set dbParameterGroupName(value: string | undefined) {
    this.inputs['db_parameter_group_name'] = value;
  }
  public get dbSubnetGroupName(): string | undefined {
    return this.inputs['db_subnet_group_name'] as string | undefined;
  }
  public set dbSubnetGroupName(value: string | undefined) {
    this.inputs['db_subnet_group_name'] = value;
  }
  public get deletionProtection(): boolean | undefined {
    return this.inputs['deletion_protection'] as boolean | undefined;
  }
  public set deletionProtection(value: boolean | undefined) {
    this.inputs['deletion_protection'] = value;
  }
  public get enableHttpEndpoint(): boolean | undefined {
    return this.inputs['enable_http_endpoint'] as boolean | undefined;
  }
  public set enableHttpEndpoint(value: boolean | undefined) {
    this.inputs['enable_http_endpoint'] = value;
  }
  public get enabledCloudwatchLogsExports(): string[] | undefined {
    return this.inputs['enabled_cloudwatch_logs_exports'] as string[] | undefined;
  }
  public set enabledCloudwatchLogsExports(value: string[] | undefined) {
    this.inputs['enabled_cloudwatch_logs_exports'] = value;
  }
  public get engine(): string | undefined {
    return this.inputs['engine'] as string | undefined;
  }
  public set engine(value: string | undefined) {
    this.inputs['engine'] = value;
  }
  public get engineMode(): string | undefined {
    return this.inputs['engine_mode'] as string | undefined;
  }
  public set engineMode(value: string | undefined) {
    this.inputs['engine_mode'] = value;
  }
  public get engineVersion(): string | undefined {
    return this.inputs['engine_version'] as string | undefined;
  }
  public set engineVersion(value: string | undefined) {
    this.inputs['engine_version'] = value;
  }
  public get finalSnapshotIdentifierPrefix(): string | undefined {
    return this.inputs['final_snapshot_identifier_prefix'] as string | undefined;
  }
  public set finalSnapshotIdentifierPrefix(value: string | undefined) {
    this.inputs['final_snapshot_identifier_prefix'] = value;
  }
  public get globalClusterIdentifier(): string | undefined {
    return this.inputs['global_cluster_identifier'] as string | undefined;
  }
  public set globalClusterIdentifier(value: string | undefined) {
    this.inputs['global_cluster_identifier'] = value;
  }
  public get iamDatabaseAuthenticationEnabled(): boolean | undefined {
    return this.inputs['iam_database_authentication_enabled'] as boolean | undefined;
  }
  public set iamDatabaseAuthenticationEnabled(value: boolean | undefined) {
    this.inputs['iam_database_authentication_enabled'] = value;
  }
  public get iamRoleDescription(): string | undefined {
    return this.inputs['iam_role_description'] as string | undefined;
  }
  public set iamRoleDescription(value: string | undefined) {
    this.inputs['iam_role_description'] = value;
  }
  public get iamRoleForceDetachPolicies(): boolean | undefined {
    return this.inputs['iam_role_force_detach_policies'] as boolean | undefined;
  }
  public set iamRoleForceDetachPolicies(value: boolean | undefined) {
    this.inputs['iam_role_force_detach_policies'] = value;
  }
  public get iamRoleManagedPolicyArns(): string[] | undefined {
    return this.inputs['iam_role_managed_policy_arns'] as string[] | undefined;
  }
  public set iamRoleManagedPolicyArns(value: string[] | undefined) {
    this.inputs['iam_role_managed_policy_arns'] = value;
  }
  public get iamRoleMaxSessionDuration(): number | undefined {
    return this.inputs['iam_role_max_session_duration'] as number | undefined;
  }
  public set iamRoleMaxSessionDuration(value: number | undefined) {
    this.inputs['iam_role_max_session_duration'] = value;
  }
  public get iamRoleName(): string | undefined {
    return this.inputs['iam_role_name'] as string | undefined;
  }
  public set iamRoleName(value: string | undefined) {
    this.inputs['iam_role_name'] = value;
  }
  public get iamRolePath(): string | undefined {
    return this.inputs['iam_role_path'] as string | undefined;
  }
  public set iamRolePath(value: string | undefined) {
    this.inputs['iam_role_path'] = value;
  }
  public get iamRolePermissionsBoundary(): string | undefined {
    return this.inputs['iam_role_permissions_boundary'] as string | undefined;
  }
  public set iamRolePermissionsBoundary(value: string | undefined) {
    this.inputs['iam_role_permissions_boundary'] = value;
  }
  public get iamRoleUseNamePrefix(): boolean | undefined {
    return this.inputs['iam_role_use_name_prefix'] as boolean | undefined;
  }
  public set iamRoleUseNamePrefix(value: boolean | undefined) {
    this.inputs['iam_role_use_name_prefix'] = value;
  }
  public get iamRoles(): string[] | undefined {
    return this.inputs['iam_roles'] as string[] | undefined;
  }
  public set iamRoles(value: string[] | undefined) {
    this.inputs['iam_roles'] = value;
  }
  public get instanceType(): string | undefined {
    return this.inputs['instance_type'] as string | undefined;
  }
  public set instanceType(value: string | undefined) {
    this.inputs['instance_type'] = value;
  }
  public get instanceTypeReplica(): string | undefined {
    return this.inputs['instance_type_replica'] as string | undefined;
  }
  public set instanceTypeReplica(value: string | undefined) {
    this.inputs['instance_type_replica'] = value;
  }
  public get instancesParameters(): { [key: string]: string }[] | undefined {
    return this.inputs['instances_parameters'] as { [key: string]: string }[] | undefined;
  }
  public set instancesParameters(value: { [key: string]: string }[] | undefined) {
    this.inputs['instances_parameters'] = value;
  }
  public get isPrimaryCluster(): boolean | undefined {
    return this.inputs['is_primary_cluster'] as boolean | undefined;
  }
  public set isPrimaryCluster(value: boolean | undefined) {
    this.inputs['is_primary_cluster'] = value;
  }
  public get kmsKeyId(): string | undefined {
    return this.inputs['kms_key_id'] as string | undefined;
  }
  public set kmsKeyId(value: string | undefined) {
    this.inputs['kms_key_id'] = value;
  }
  public get monitoringInterval(): number | undefined {
    return this.inputs['monitoring_interval'] as number | undefined;
  }
  public set monitoringInterval(value: number | undefined) {
    this.inputs['monitoring_interval'] = value;
  }
  public get monitoringRoleArn(): string | undefined {
    return this.inputs['monitoring_role_arn'] as string | undefined;
  }
  public set monitoringRoleArn(value: string | undefined) {
    this.inputs['monitoring_role_arn'] = value;
  }
  public get name(): string | undefined {
    return this.inputs['name'] as string | undefined;
  }
  public set name(value: string | undefined) {
    this.inputs['name'] = value;
  }
  public get password(): string | undefined {
    return this.inputs['password'] as string | undefined;
  }
  public set password(value: string | undefined) {
    this.inputs['password'] = value;
  }
  public get performanceInsightsEnabled(): boolean | undefined {
    return this.inputs['performance_insights_enabled'] as boolean | undefined;
  }
  public set performanceInsightsEnabled(value: boolean | undefined) {
    this.inputs['performance_insights_enabled'] = value;
  }
  public get performanceInsightsKmsKeyId(): string | undefined {
    return this.inputs['performance_insights_kms_key_id'] as string | undefined;
  }
  public set performanceInsightsKmsKeyId(value: string | undefined) {
    this.inputs['performance_insights_kms_key_id'] = value;
  }
  public get port(): string | undefined {
    return this.inputs['port'] as string | undefined;
  }
  public set port(value: string | undefined) {
    this.inputs['port'] = value;
  }
  public get predefinedMetricType(): string | undefined {
    return this.inputs['predefined_metric_type'] as string | undefined;
  }
  public set predefinedMetricType(value: string | undefined) {
    this.inputs['predefined_metric_type'] = value;
  }
  public get preferredBackupWindow(): string | undefined {
    return this.inputs['preferred_backup_window'] as string | undefined;
  }
  public set preferredBackupWindow(value: string | undefined) {
    this.inputs['preferred_backup_window'] = value;
  }
  public get preferredMaintenanceWindow(): string | undefined {
    return this.inputs['preferred_maintenance_window'] as string | undefined;
  }
  public set preferredMaintenanceWindow(value: string | undefined) {
    this.inputs['preferred_maintenance_window'] = value;
  }
  public get publiclyAccessible(): boolean | undefined {
    return this.inputs['publicly_accessible'] as boolean | undefined;
  }
  public set publiclyAccessible(value: boolean | undefined) {
    this.inputs['publicly_accessible'] = value;
  }
  public get replicaCount(): number | undefined {
    return this.inputs['replica_count'] as number | undefined;
  }
  public set replicaCount(value: number | undefined) {
    this.inputs['replica_count'] = value;
  }
  public get replicaScaleConnections(): number | undefined {
    return this.inputs['replica_scale_connections'] as number | undefined;
  }
  public set replicaScaleConnections(value: number | undefined) {
    this.inputs['replica_scale_connections'] = value;
  }
  public get replicaScaleCpu(): number | undefined {
    return this.inputs['replica_scale_cpu'] as number | undefined;
  }
  public set replicaScaleCpu(value: number | undefined) {
    this.inputs['replica_scale_cpu'] = value;
  }
  public get replicaScaleEnabled(): boolean | undefined {
    return this.inputs['replica_scale_enabled'] as boolean | undefined;
  }
  public set replicaScaleEnabled(value: boolean | undefined) {
    this.inputs['replica_scale_enabled'] = value;
  }
  public get replicaScaleInCooldown(): number | undefined {
    return this.inputs['replica_scale_in_cooldown'] as number | undefined;
  }
  public set replicaScaleInCooldown(value: number | undefined) {
    this.inputs['replica_scale_in_cooldown'] = value;
  }
  public get replicaScaleMax(): number | undefined {
    return this.inputs['replica_scale_max'] as number | undefined;
  }
  public set replicaScaleMax(value: number | undefined) {
    this.inputs['replica_scale_max'] = value;
  }
  public get replicaScaleMin(): number | undefined {
    return this.inputs['replica_scale_min'] as number | undefined;
  }
  public set replicaScaleMin(value: number | undefined) {
    this.inputs['replica_scale_min'] = value;
  }
  public get replicaScaleOutCooldown(): number | undefined {
    return this.inputs['replica_scale_out_cooldown'] as number | undefined;
  }
  public set replicaScaleOutCooldown(value: number | undefined) {
    this.inputs['replica_scale_out_cooldown'] = value;
  }
  public get replicationSourceIdentifier(): string | undefined {
    return this.inputs['replication_source_identifier'] as string | undefined;
  }
  public set replicationSourceIdentifier(value: string | undefined) {
    this.inputs['replication_source_identifier'] = value;
  }
  public get s3Import(): { [key: string]: string } | undefined {
    return this.inputs['s3_import'] as { [key: string]: string } | undefined;
  }
  public set s3Import(value: { [key: string]: string } | undefined) {
    this.inputs['s3_import'] = value;
  }
  public get scalingConfiguration(): { [key: string]: string } | undefined {
    return this.inputs['scaling_configuration'] as { [key: string]: string } | undefined;
  }
  public set scalingConfiguration(value: { [key: string]: string } | undefined) {
    this.inputs['scaling_configuration'] = value;
  }
  public get securityGroupDescription(): string | undefined {
    return this.inputs['security_group_description'] as string | undefined;
  }
  public set securityGroupDescription(value: string | undefined) {
    this.inputs['security_group_description'] = value;
  }
  public get securityGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['security_group_tags'] as { [key: string]: string } | undefined;
  }
  public set securityGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['security_group_tags'] = value;
  }
  public get skipFinalSnapshot(): boolean | undefined {
    return this.inputs['skip_final_snapshot'] as boolean | undefined;
  }
  public set skipFinalSnapshot(value: boolean | undefined) {
    this.inputs['skip_final_snapshot'] = value;
  }
  public get snapshotIdentifier(): string | undefined {
    return this.inputs['snapshot_identifier'] as string | undefined;
  }
  public set snapshotIdentifier(value: string | undefined) {
    this.inputs['snapshot_identifier'] = value;
  }
  public get sourceRegion(): string | undefined {
    return this.inputs['source_region'] as string | undefined;
  }
  public set sourceRegion(value: string | undefined) {
    this.inputs['source_region'] = value;
  }
  public get storageEncrypted(): boolean | undefined {
    return this.inputs['storage_encrypted'] as boolean | undefined;
  }
  public set storageEncrypted(value: boolean | undefined) {
    this.inputs['storage_encrypted'] = value;
  }
  public get subnets(): string[] | undefined {
    return this.inputs['subnets'] as string[] | undefined;
  }
  public set subnets(value: string[] | undefined) {
    this.inputs['subnets'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get username(): string | undefined {
    return this.inputs['username'] as string | undefined;
  }
  public set username(value: string | undefined) {
    this.inputs['username'] = value;
  }
  public get vpcId(): string | undefined {
    return this.inputs['vpc_id'] as string | undefined;
  }
  public set vpcId(value: string | undefined) {
    this.inputs['vpc_id'] = value;
  }
  public get vpcSecurityGroupIds(): string[] | undefined {
    return this.inputs['vpc_security_group_ids'] as string[] | undefined;
  }
  public set vpcSecurityGroupIds(value: string[] | undefined) {
    this.inputs['vpc_security_group_ids'] = value;
  }
  public get thisEnhancedMonitoringIamRoleArnOutput(): string {
    return this.interpolationForOutput('this_enhanced_monitoring_iam_role_arn')
  }
  public get thisEnhancedMonitoringIamRoleNameOutput(): string {
    return this.interpolationForOutput('this_enhanced_monitoring_iam_role_name')
  }
  public get thisEnhancedMonitoringIamRoleUniqueIdOutput(): string {
    return this.interpolationForOutput('this_enhanced_monitoring_iam_role_unique_id')
  }
  public get thisRdsClusterArnOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_arn')
  }
  public get thisRdsClusterDatabaseNameOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_database_name')
  }
  public get thisRdsClusterEndpointOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_endpoint')
  }
  public get thisRdsClusterEngineVersionOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_engine_version')
  }
  public get thisRdsClusterHostedZoneIdOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_hosted_zone_id')
  }
  public get thisRdsClusterIdOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_id')
  }
  public get thisRdsClusterInstanceEndpointsOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_instance_endpoints')
  }
  public get thisRdsClusterInstanceIdsOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_instance_ids')
  }
  public get thisRdsClusterMasterPasswordOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_master_password')
  }
  public get thisRdsClusterMasterUsernameOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_master_username')
  }
  public get thisRdsClusterPortOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_port')
  }
  public get thisRdsClusterReaderEndpointOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_reader_endpoint')
  }
  public get thisRdsClusterResourceIdOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_resource_id')
  }
  public get thisSecurityGroupIdOutput(): string {
    return this.interpolationForOutput('this_security_group_id')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
"
`;

exports[`generate multiple aws modules 2`] = `
"// generated by cdktf get
// terraform-aws-modules/rds-aurora/aws
import { TerraformModule } from 'cdktf';
import { Construct } from 'constructs';
export interface TerraformAwsModulesRdsAuroraAwsOptions {
  /**
   * Determines whether major engine upgrades are allowed when changing engine version
   */
  readonly allowMajorVersionUpgrade?: boolean;
  /**
   * A list of CIDR blocks which are allowed to access the database
   * @default 
   */
  readonly allowedCidrBlocks?: string[];
  /**
   * A list of Security Group ID's to allow access to
   * @default 
   */
  readonly allowedSecurityGroups?: string[];
  /**
   * Determines whether or not any DB modifications are applied immediately, or during the maintenance window
   */
  readonly applyImmediately?: boolean;
  /**
   * Determines whether minor engine upgrades will be performed automatically in the maintenance window
   * @default true
   */
  readonly autoMinorVersionUpgrade?: boolean;
  /**
   * The target backtrack window, in seconds. Only available for aurora engine currently. To disable backtracking, set this value to 0. Must be between 0 and 259200 (72 hours)
   */
  readonly backtrackWindow?: number;
  /**
   * How long to keep backups for (in days)
   * @default 7
   */
  readonly backupRetentionPeriod?: number;
  /**
   * The identifier of the CA certificate for the DB instance
   * @default rds-ca-2019
   */
  readonly caCertIdentifier?: string;
  /**
   * A map of tags to add to only the RDS cluster. Used for AWS Instance Scheduler tagging
   * @default [object Object]
   */
  readonly clusterTags?: { [key: string]: string };
  /**
   * Copy all Cluster tags to snapshots
   */
  readonly copyTagsToSnapshot?: boolean;
  /**
   * Whether cluster should be created (it affects almost all resources)
   * @default true
   */
  readonly createCluster?: boolean;
  /**
   * Whether to create the IAM role for RDS enhanced monitoring
   * @default true
   */
  readonly createMonitoringRole?: boolean;
  /**
   * Whether to create random password for RDS primary cluster
   * @default true
   */
  readonly createRandomPassword?: boolean;
  /**
   * Whether to create security group for RDS cluster
   * @default true
   */
  readonly createSecurityGroup?: boolean;
  /**
   * Name for an automatically created database on cluster creation
   */
  readonly databaseName?: string;
  /**
   * The name of a DB Cluster parameter group to use
   */
  readonly dbClusterParameterGroupName?: string;
  /**
   * The name of a DB parameter group to use
   */
  readonly dbParameterGroupName?: string;
  /**
   * The existing subnet group name to use
   */
  readonly dbSubnetGroupName?: string;
  /**
   * If the DB instance should have deletion protection enabled
   */
  readonly deletionProtection?: boolean;
  /**
   * Whether or not to enable the Data API for a serverless Aurora database engine
   */
  readonly enableHttpEndpoint?: boolean;
  /**
   * List of log types to export to cloudwatch - \`audit\`, \`error\`, \`general\`, \`slowquery\`, \`postgresql\`
   * @default 
   */
  readonly enabledCloudwatchLogsExports?: string[];
  /**
   * Aurora database engine type, currently aurora, aurora-mysql or aurora-postgresql
   * @default aurora
   */
  readonly engine?: string;
  /**
   * The database engine mode. Valid values: global, parallelquery, provisioned, serverless, multimaster
   * @default provisioned
   */
  readonly engineMode?: string;
  /**
   * Aurora database engine version
   * @default 5.6.10a
   */
  readonly engineVersion?: string;
  /**
   * The prefix name to use when creating a final snapshot on cluster destroy, appends a random 8 digits to name to ensure it's unique too.
   * @default final
   */
  readonly finalSnapshotIdentifierPrefix?: string;
  /**
   * The global cluster identifier specified on aws_rds_global_cluster
   */
  readonly globalClusterIdentifier?: string;
  /**
   * Specifies whether IAM Database authentication should be enabled or not. Not all versions and instances are supported. Refer to the AWS documentation to see which versions are supported
   */
  readonly iamDatabaseAuthenticationEnabled?: boolean;
  /**
   * Description of the role
   */
  readonly iamRoleDescription?: string;
  /**
   * Whether to force detaching any policies the role has before destroying it
   */
  readonly iamRoleForceDetachPolicies?: boolean;
  /**
   * Set of exclusive IAM managed policy ARNs to attach to the IAM role
   */
  readonly iamRoleManagedPolicyArns?: string[];
  /**
   * Maximum session duration (in seconds) that you want to set for the role
   */
  readonly iamRoleMaxSessionDuration?: number;
  /**
   * Friendly name of the role
   */
  readonly iamRoleName?: string;
  /**
   * Path to the role
   */
  readonly iamRolePath?: string;
  /**
   * The ARN of the policy that is used to set the permissions boundary for the role
   */
  readonly iamRolePermissionsBoundary?: string;
  /**
   * Whether to use \`iam_role_name\` as is or create a unique name beginning with the \`iam_role_name\` as the prefix
   */
  readonly iamRoleUseNamePrefix?: boolean;
  /**
   * A List of ARNs for the IAM roles to associate to the RDS Cluster
   * @default 
   */
  readonly iamRoles?: string[];
  /**
   * Instance type to use at master instance. If instance_type_replica is not set it will use the same type for replica instances
   */
  readonly instanceType?: string;
  /**
   * Instance type to use at replica instance
   */
  readonly instanceTypeReplica?: string;
  /**
   * Customized instance settings. Supported keys: \`instance_name\`, \`instance_type\`, \`instance_promotion_tier\`, \`publicly_accessible\`
   * @default 
   */
  readonly instancesParameters?: { [key: string]: string }[];
  /**
   * Whether to create a primary cluster (set to false to be a part of a Global database)
   * @default true
   */
  readonly isPrimaryCluster?: boolean;
  /**
   * The ARN for the KMS encryption key if one is set to the cluster
   */
  readonly kmsKeyId?: string;
  /**
   * The interval (seconds) between points when Enhanced Monitoring metrics are collected
   */
  readonly monitoringInterval?: number;
  /**
   * IAM role used by RDS to send enhanced monitoring metrics to CloudWatch
   */
  readonly monitoringRoleArn?: string;
  /**
   * Name used across resources created
   */
  readonly name?: string;
  /**
   * Master DB password. Note - when specifying a value here, 'create_random_password' should be set to \`false\`
   */
  readonly password?: string;
  /**
   * Specifies whether Performance Insights is enabled or not
   */
  readonly performanceInsightsEnabled?: boolean;
  /**
   * The ARN for the KMS key to encrypt Performance Insights data
   */
  readonly performanceInsightsKmsKeyId?: string;
  /**
   * The port on which to accept connections
   */
  readonly port?: string;
  /**
   * The metric type to scale on. Valid values are RDSReaderAverageCPUUtilization and RDSReaderAverageDatabaseConnections
   * @default RDSReaderAverageCPUUtilization
   */
  readonly predefinedMetricType?: string;
  /**
   * When to perform DB backups
   * @default 02:00-03:00
   */
  readonly preferredBackupWindow?: string;
  /**
   * When to perform DB maintenance
   * @default sun:05:00-sun:06:00
   */
  readonly preferredMaintenanceWindow?: string;
  /**
   * Whether the DB should have a public IP address
   */
  readonly publiclyAccessible?: boolean;
  /**
   * Number of reader nodes to create.  If \`replica_scale_enable\` is \`true\`, the value of \`replica_scale_min\` is used instead.
   * @default 1
   */
  readonly replicaCount?: number;
  /**
   * Average number of connections threshold which will initiate autoscaling. Default value is 70% of db.r4.large's default max_connections
   * @default 700
   */
  readonly replicaScaleConnections?: number;
  /**
   * CPU threshold which will initiate autoscaling
   * @default 70
   */
  readonly replicaScaleCpu?: number;
  /**
   * Whether to enable autoscaling for RDS Aurora (MySQL) read replicas
   */
  readonly replicaScaleEnabled?: boolean;
  /**
   * Cooldown in seconds before allowing further scaling operations after a scale in
   * @default 300
   */
  readonly replicaScaleInCooldown?: number;
  /**
   * Maximum number of read replicas permitted when autoscaling is enabled
   */
  readonly replicaScaleMax?: number;
  /**
   * Minimum number of read replicas permitted when autoscaling is enabled
   * @default 2
   */
  readonly replicaScaleMin?: number;
  /**
   * Cooldown in seconds before allowing further scaling operations after a scale out
   * @default 300
   */
  readonly replicaScaleOutCooldown?: number;
  /**
   * ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica
   */
  readonly replicationSourceIdentifier?: string;
  /**
   * Configuration map used to restore from a Percona Xtrabackup in S3 (only MySQL is supported)
   */
  readonly s3Import?: { [key: string]: string };
  /**
   * Map of nested attributes with scaling properties. Only valid when engine_mode is set to \`serverless\`
   * @default [object Object]
   */
  readonly scalingConfiguration?: { [key: string]: string };
  /**
   * The description of the security group. If value is set to empty string it will contain cluster name in the description
   * @default Managed by Terraform
   */
  readonly securityGroupDescription?: string;
  /**
   * Additional tags for the security group
   * @default [object Object]
   */
  readonly securityGroupTags?: { [key: string]: string };
  /**
   * Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created.
   */
  readonly skipFinalSnapshot?: boolean;
  /**
   * DB snapshot to create this database from
   */
  readonly snapshotIdentifier?: string;
  /**
   * The source region for an encrypted replica DB cluster
   */
  readonly sourceRegion?: string;
  /**
   * Specifies whether the underlying storage layer should be encrypted
   * @default true
   */
  readonly storageEncrypted?: boolean;
  /**
   * List of subnet IDs used by database subnet group created
   * @default 
   */
  readonly subnets?: string[];
  /**
   * A map of tags to add to all resources.
   * @default [object Object]
   */
  readonly tags?: { [key: string]: string };
  /**
   * Master DB username
   * @default root
   */
  readonly username?: string;
  /**
   * VPC ID
   */
  readonly vpcId?: string;
  /**
   * List of VPC security groups to associate to the cluster in addition to the SG we create in this module
   * @default 
   */
  readonly vpcSecurityGroupIds?: string[];
}
export class TerraformAwsModulesRdsAuroraAws extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, options: TerraformAwsModulesRdsAuroraAwsOptions = {}) {
    super(scope, id, {
      source: 'terraform-aws-modules/rds-aurora/aws',
      version: '4.1.0',
    });
    this.allowMajorVersionUpgrade = options.allowMajorVersionUpgrade;
    this.allowedCidrBlocks = options.allowedCidrBlocks;
    this.allowedSecurityGroups = options.allowedSecurityGroups;
    this.applyImmediately = options.applyImmediately;
    this.autoMinorVersionUpgrade = options.autoMinorVersionUpgrade;
    this.backtrackWindow = options.backtrackWindow;
    this.backupRetentionPeriod = options.backupRetentionPeriod;
    this.caCertIdentifier = options.caCertIdentifier;
    this.clusterTags = options.clusterTags;
    this.copyTagsToSnapshot = options.copyTagsToSnapshot;
    this.createCluster = options.createCluster;
    this.createMonitoringRole = options.createMonitoringRole;
    this.createRandomPassword = options.createRandomPassword;
    this.createSecurityGroup = options.createSecurityGroup;
    this.databaseName = options.databaseName;
    this.dbClusterParameterGroupName = options.dbClusterParameterGroupName;
    this.dbParameterGroupName = options.dbParameterGroupName;
    this.dbSubnetGroupName = options.dbSubnetGroupName;
    this.deletionProtection = options.deletionProtection;
    this.enableHttpEndpoint = options.enableHttpEndpoint;
    this.enabledCloudwatchLogsExports = options.enabledCloudwatchLogsExports;
    this.engine = options.engine;
    this.engineMode = options.engineMode;
    this.engineVersion = options.engineVersion;
    this.finalSnapshotIdentifierPrefix = options.finalSnapshotIdentifierPrefix;
    this.globalClusterIdentifier = options.globalClusterIdentifier;
    this.iamDatabaseAuthenticationEnabled = options.iamDatabaseAuthenticationEnabled;
    this.iamRoleDescription = options.iamRoleDescription;
    this.iamRoleForceDetachPolicies = options.iamRoleForceDetachPolicies;
    this.iamRoleManagedPolicyArns = options.iamRoleManagedPolicyArns;
    this.iamRoleMaxSessionDuration = options.iamRoleMaxSessionDuration;
    this.iamRoleName = options.iamRoleName;
    this.iamRolePath = options.iamRolePath;
    this.iamRolePermissionsBoundary = options.iamRolePermissionsBoundary;
    this.iamRoleUseNamePrefix = options.iamRoleUseNamePrefix;
    this.iamRoles = options.iamRoles;
    this.instanceType = options.instanceType;
    this.instanceTypeReplica = options.instanceTypeReplica;
    this.instancesParameters = options.instancesParameters;
    this.isPrimaryCluster = options.isPrimaryCluster;
    this.kmsKeyId = options.kmsKeyId;
    this.monitoringInterval = options.monitoringInterval;
    this.monitoringRoleArn = options.monitoringRoleArn;
    this.name = options.name;
    this.password = options.password;
    this.performanceInsightsEnabled = options.performanceInsightsEnabled;
    this.performanceInsightsKmsKeyId = options.performanceInsightsKmsKeyId;
    this.port = options.port;
    this.predefinedMetricType = options.predefinedMetricType;
    this.preferredBackupWindow = options.preferredBackupWindow;
    this.preferredMaintenanceWindow = options.preferredMaintenanceWindow;
    this.publiclyAccessible = options.publiclyAccessible;
    this.replicaCount = options.replicaCount;
    this.replicaScaleConnections = options.replicaScaleConnections;
    this.replicaScaleCpu = options.replicaScaleCpu;
    this.replicaScaleEnabled = options.replicaScaleEnabled;
    this.replicaScaleInCooldown = options.replicaScaleInCooldown;
    this.replicaScaleMax = options.replicaScaleMax;
    this.replicaScaleMin = options.replicaScaleMin;
    this.replicaScaleOutCooldown = options.replicaScaleOutCooldown;
    this.replicationSourceIdentifier = options.replicationSourceIdentifier;
    this.s3Import = options.s3Import;
    this.scalingConfiguration = options.scalingConfiguration;
    this.securityGroupDescription = options.securityGroupDescription;
    this.securityGroupTags = options.securityGroupTags;
    this.skipFinalSnapshot = options.skipFinalSnapshot;
    this.snapshotIdentifier = options.snapshotIdentifier;
    this.sourceRegion = options.sourceRegion;
    this.storageEncrypted = options.storageEncrypted;
    this.subnets = options.subnets;
    this.tags = options.tags;
    this.username = options.username;
    this.vpcId = options.vpcId;
    this.vpcSecurityGroupIds = options.vpcSecurityGroupIds;
  }
  public get allowMajorVersionUpgrade(): boolean | undefined {
    return this.inputs['allow_major_version_upgrade'] as boolean | undefined;
  }
  public set allowMajorVersionUpgrade(value: boolean | undefined) {
    this.inputs['allow_major_version_upgrade'] = value;
  }
  public get allowedCidrBlocks(): string[] | undefined {
    return this.inputs['allowed_cidr_blocks'] as string[] | undefined;
  }
  public set allowedCidrBlocks(value: string[] | undefined) {
    this.inputs['allowed_cidr_blocks'] = value;
  }
  public get allowedSecurityGroups(): string[] | undefined {
    return this.inputs['allowed_security_groups'] as string[] | undefined;
  }
  public set allowedSecurityGroups(value: string[] | undefined) {
    this.inputs['allowed_security_groups'] = value;
  }
  public get applyImmediately(): boolean | undefined {
    return this.inputs['apply_immediately'] as boolean | undefined;
  }
  public set applyImmediately(value: boolean | undefined) {
    this.inputs['apply_immediately'] = value;
  }
  public get autoMinorVersionUpgrade(): boolean | undefined {
    return this.inputs['auto_minor_version_upgrade'] as boolean | undefined;
  }
  public set autoMinorVersionUpgrade(value: boolean | undefined) {
    this.inputs['auto_minor_version_upgrade'] = value;
  }
  public get backtrackWindow(): number | undefined {
    return this.inputs['backtrack_window'] as number | undefined;
  }
  public set backtrackWindow(value: number | undefined) {
    this.inputs['backtrack_window'] = value;
  }
  public get backupRetentionPeriod(): number | undefined {
    return this.inputs['backup_retention_period'] as number | undefined;
  }
  public set backupRetentionPeriod(value: number | undefined) {
    this.inputs['backup_retention_period'] = value;
  }
  public get caCertIdentifier(): string | undefined {
    return this.inputs['ca_cert_identifier'] as string | undefined;
  }
  public set caCertIdentifier(value: string | undefined) {
    this.inputs['ca_cert_identifier'] = value;
  }
  public get clusterTags(): { [key: string]: string } | undefined {
    return this.inputs['cluster_tags'] as { [key: string]: string } | undefined;
  }
  public set clusterTags(value: { [key: string]: string } | undefined) {
    this.inputs['cluster_tags'] = value;
  }
  public get copyTagsToSnapshot(): boolean | undefined {
    return this.inputs['copy_tags_to_snapshot'] as boolean | undefined;
  }
  public set copyTagsToSnapshot(value: boolean | undefined) {
    this.inputs['copy_tags_to_snapshot'] = value;
  }
  public get createCluster(): boolean | undefined {
    return this.inputs['create_cluster'] as boolean | undefined;
  }
  public set createCluster(value: boolean | undefined) {
    this.inputs['create_cluster'] = value;
  }
  public get createMonitoringRole(): boolean | undefined {
    return this.inputs['create_monitoring_role'] as boolean | undefined;
  }
  public set createMonitoringRole(value: boolean | undefined) {
    this.inputs['create_monitoring_role'] = value;
  }
  public get createRandomPassword(): boolean | undefined {
    return this.inputs['create_random_password'] as boolean | undefined;
  }
  public set createRandomPassword(value: boolean | undefined) {
    this.inputs['create_random_password'] = value;
  }
  public get createSecurityGroup(): boolean | undefined {
    return this.inputs['create_security_group'] as boolean | undefined;
  }
  public set createSecurityGroup(value: boolean | undefined) {
    this.inputs['create_security_group'] = value;
  }
  public get databaseName(): string | undefined {
    return this.inputs['database_name'] as string | undefined;
  }
  public set databaseName(value: string | undefined) {
    this.inputs['database_name'] = value;
  }
  public get dbClusterParameterGroupName(): string | undefined {
    return this.inputs['db_cluster_parameter_group_name'] as string | undefined;
  }
  public set dbClusterParameterGroupName(value: string | undefined) {
    this.inputs['db_cluster_parameter_group_name'] = value;
  }
  public get dbParameterGroupName(): string | undefined {
    return this.inputs['db_parameter_group_name'] as string | undefined;
  }
  public set dbParameterGroupName(value: string | undefined) {
    this.inputs['db_parameter_group_name'] = value;
  }
  public get dbSubnetGroupName(): string | undefined {
    return this.inputs['db_subnet_group_name'] as string | undefined;
  }
  public set dbSubnetGroupName(value: string | undefined) {
    this.inputs['db_subnet_group_name'] = value;
  }
  public get deletionProtection(): boolean | undefined {
    return this.inputs['deletion_protection'] as boolean | undefined;
  }
  public set deletionProtection(value: boolean | undefined) {
    this.inputs['deletion_protection'] = value;
  }
  public get enableHttpEndpoint(): boolean | undefined {
    return this.inputs['enable_http_endpoint'] as boolean | undefined;
  }
  public set enableHttpEndpoint(value: boolean | undefined) {
    this.inputs['enable_http_endpoint'] = value;
  }
  public get enabledCloudwatchLogsExports(): string[] | undefined {
    return this.inputs['enabled_cloudwatch_logs_exports'] as string[] | undefined;
  }
  public set enabledCloudwatchLogsExports(value: string[] | undefined) {
    this.inputs['enabled_cloudwatch_logs_exports'] = value;
  }
  public get engine(): string | undefined {
    return this.inputs['engine'] as string | undefined;
  }
  public set engine(value: string | undefined) {
    this.inputs['engine'] = value;
  }
  public get engineMode(): string | undefined {
    return this.inputs['engine_mode'] as string | undefined;
  }
  public set engineMode(value: string | undefined) {
    this.inputs['engine_mode'] = value;
  }
  public get engineVersion(): string | undefined {
    return this.inputs['engine_version'] as string | undefined;
  }
  public set engineVersion(value: string | undefined) {
    this.inputs['engine_version'] = value;
  }
  public get finalSnapshotIdentifierPrefix(): string | undefined {
    return this.inputs['final_snapshot_identifier_prefix'] as string | undefined;
  }
  public set finalSnapshotIdentifierPrefix(value: string | undefined) {
    this.inputs['final_snapshot_identifier_prefix'] = value;
  }
  public get globalClusterIdentifier(): string | undefined {
    return this.inputs['global_cluster_identifier'] as string | undefined;
  }
  public set globalClusterIdentifier(value: string | undefined) {
    this.inputs['global_cluster_identifier'] = value;
  }
  public get iamDatabaseAuthenticationEnabled(): boolean | undefined {
    return this.inputs['iam_database_authentication_enabled'] as boolean | undefined;
  }
  public set iamDatabaseAuthenticationEnabled(value: boolean | undefined) {
    this.inputs['iam_database_authentication_enabled'] = value;
  }
  public get iamRoleDescription(): string | undefined {
    return this.inputs['iam_role_description'] as string | undefined;
  }
  public set iamRoleDescription(value: string | undefined) {
    this.inputs['iam_role_description'] = value;
  }
  public get iamRoleForceDetachPolicies(): boolean | undefined {
    return this.inputs['iam_role_force_detach_policies'] as boolean | undefined;
  }
  public set iamRoleForceDetachPolicies(value: boolean | undefined) {
    this.inputs['iam_role_force_detach_policies'] = value;
  }
  public get iamRoleManagedPolicyArns(): string[] | undefined {
    return this.inputs['iam_role_managed_policy_arns'] as string[] | undefined;
  }
  public set iamRoleManagedPolicyArns(value: string[] | undefined) {
    this.inputs['iam_role_managed_policy_arns'] = value;
  }
  public get iamRoleMaxSessionDuration(): number | undefined {
    return this.inputs['iam_role_max_session_duration'] as number | undefined;
  }
  public set iamRoleMaxSessionDuration(value: number | undefined) {
    this.inputs['iam_role_max_session_duration'] = value;
  }
  public get iamRoleName(): string | undefined {
    return this.inputs['iam_role_name'] as string | undefined;
  }
  public set iamRoleName(value: string | undefined) {
    this.inputs['iam_role_name'] = value;
  }
  public get iamRolePath(): string | undefined {
    return this.inputs['iam_role_path'] as string | undefined;
  }
  public set iamRolePath(value: string | undefined) {
    this.inputs['iam_role_path'] = value;
  }
  public get iamRolePermissionsBoundary(): string | undefined {
    return this.inputs['iam_role_permissions_boundary'] as string | undefined;
  }
  public set iamRolePermissionsBoundary(value: string | undefined) {
    this.inputs['iam_role_permissions_boundary'] = value;
  }
  public get iamRoleUseNamePrefix(): boolean | undefined {
    return this.inputs['iam_role_use_name_prefix'] as boolean | undefined;
  }
  public set iamRoleUseNamePrefix(value: boolean | undefined) {
    this.inputs['iam_role_use_name_prefix'] = value;
  }
  public get iamRoles(): string[] | undefined {
    return this.inputs['iam_roles'] as string[] | undefined;
  }
  public set iamRoles(value: string[] | undefined) {
    this.inputs['iam_roles'] = value;
  }
  public get instanceType(): string | undefined {
    return this.inputs['instance_type'] as string | undefined;
  }
  public set instanceType(value: string | undefined) {
    this.inputs['instance_type'] = value;
  }
  public get instanceTypeReplica(): string | undefined {
    return this.inputs['instance_type_replica'] as string | undefined;
  }
  public set instanceTypeReplica(value: string | undefined) {
    this.inputs['instance_type_replica'] = value;
  }
  public get instancesParameters(): { [key: string]: string }[] | undefined {
    return this.inputs['instances_parameters'] as { [key: string]: string }[] | undefined;
  }
  public set instancesParameters(value: { [key: string]: string }[] | undefined) {
    this.inputs['instances_parameters'] = value;
  }
  public get isPrimaryCluster(): boolean | undefined {
    return this.inputs['is_primary_cluster'] as boolean | undefined;
  }
  public set isPrimaryCluster(value: boolean | undefined) {
    this.inputs['is_primary_cluster'] = value;
  }
  public get kmsKeyId(): string | undefined {
    return this.inputs['kms_key_id'] as string | undefined;
  }
  public set kmsKeyId(value: string | undefined) {
    this.inputs['kms_key_id'] = value;
  }
  public get monitoringInterval(): number | undefined {
    return this.inputs['monitoring_interval'] as number | undefined;
  }
  public set monitoringInterval(value: number | undefined) {
    this.inputs['monitoring_interval'] = value;
  }
  public get monitoringRoleArn(): string | undefined {
    return this.inputs['monitoring_role_arn'] as string | undefined;
  }
  public set monitoringRoleArn(value: string | undefined) {
    this.inputs['monitoring_role_arn'] = value;
  }
  public get name(): string | undefined {
    return this.inputs['name'] as string | undefined;
  }
  public set name(value: string | undefined) {
    this.inputs['name'] = value;
  }
  public get password(): string | undefined {
    return this.inputs['password'] as string | undefined;
  }
  public set password(value: string | undefined) {
    this.inputs['password'] = value;
  }
  public get performanceInsightsEnabled(): boolean | undefined {
    return this.inputs['performance_insights_enabled'] as boolean | undefined;
  }
  public set performanceInsightsEnabled(value: boolean | undefined) {
    this.inputs['performance_insights_enabled'] = value;
  }
  public get performanceInsightsKmsKeyId(): string | undefined {
    return this.inputs['performance_insights_kms_key_id'] as string | undefined;
  }
  public set performanceInsightsKmsKeyId(value: string | undefined) {
    this.inputs['performance_insights_kms_key_id'] = value;
  }
  public get port(): string | undefined {
    return this.inputs['port'] as string | undefined;
  }
  public set port(value: string | undefined) {
    this.inputs['port'] = value;
  }
  public get predefinedMetricType(): string | undefined {
    return this.inputs['predefined_metric_type'] as string | undefined;
  }
  public set predefinedMetricType(value: string | undefined) {
    this.inputs['predefined_metric_type'] = value;
  }
  public get preferredBackupWindow(): string | undefined {
    return this.inputs['preferred_backup_window'] as string | undefined;
  }
  public set preferredBackupWindow(value: string | undefined) {
    this.inputs['preferred_backup_window'] = value;
  }
  public get preferredMaintenanceWindow(): string | undefined {
    return this.inputs['preferred_maintenance_window'] as string | undefined;
  }
  public set preferredMaintenanceWindow(value: string | undefined) {
    this.inputs['preferred_maintenance_window'] = value;
  }
  public get publiclyAccessible(): boolean | undefined {
    return this.inputs['publicly_accessible'] as boolean | undefined;
  }
  public set publiclyAccessible(value: boolean | undefined) {
    this.inputs['publicly_accessible'] = value;
  }
  public get replicaCount(): number | undefined {
    return this.inputs['replica_count'] as number | undefined;
  }
  public set replicaCount(value: number | undefined) {
    this.inputs['replica_count'] = value;
  }
  public get replicaScaleConnections(): number | undefined {
    return this.inputs['replica_scale_connections'] as number | undefined;
  }
  public set replicaScaleConnections(value: number | undefined) {
    this.inputs['replica_scale_connections'] = value;
  }
  public get replicaScaleCpu(): number | undefined {
    return this.inputs['replica_scale_cpu'] as number | undefined;
  }
  public set replicaScaleCpu(value: number | undefined) {
    this.inputs['replica_scale_cpu'] = value;
  }
  public get replicaScaleEnabled(): boolean | undefined {
    return this.inputs['replica_scale_enabled'] as boolean | undefined;
  }
  public set replicaScaleEnabled(value: boolean | undefined) {
    this.inputs['replica_scale_enabled'] = value;
  }
  public get replicaScaleInCooldown(): number | undefined {
    return this.inputs['replica_scale_in_cooldown'] as number | undefined;
  }
  public set replicaScaleInCooldown(value: number | undefined) {
    this.inputs['replica_scale_in_cooldown'] = value;
  }
  public get replicaScaleMax(): number | undefined {
    return this.inputs['replica_scale_max'] as number | undefined;
  }
  public set replicaScaleMax(value: number | undefined) {
    this.inputs['replica_scale_max'] = value;
  }
  public get replicaScaleMin(): number | undefined {
    return this.inputs['replica_scale_min'] as number | undefined;
  }
  public set replicaScaleMin(value: number | undefined) {
    this.inputs['replica_scale_min'] = value;
  }
  public get replicaScaleOutCooldown(): number | undefined {
    return this.inputs['replica_scale_out_cooldown'] as number | undefined;
  }
  public set replicaScaleOutCooldown(value: number | undefined) {
    this.inputs['replica_scale_out_cooldown'] = value;
  }
  public get replicationSourceIdentifier(): string | undefined {
    return this.inputs['replication_source_identifier'] as string | undefined;
  }
  public set replicationSourceIdentifier(value: string | undefined) {
    this.inputs['replication_source_identifier'] = value;
  }
  public get s3Import(): { [key: string]: string } | undefined {
    return this.inputs['s3_import'] as { [key: string]: string } | undefined;
  }
  public set s3Import(value: { [key: string]: string } | undefined) {
    this.inputs['s3_import'] = value;
  }
  public get scalingConfiguration(): { [key: string]: string } | undefined {
    return this.inputs['scaling_configuration'] as { [key: string]: string } | undefined;
  }
  public set scalingConfiguration(value: { [key: string]: string } | undefined) {
    this.inputs['scaling_configuration'] = value;
  }
  public get securityGroupDescription(): string | undefined {
    return this.inputs['security_group_description'] as string | undefined;
  }
  public set securityGroupDescription(value: string | undefined) {
    this.inputs['security_group_description'] = value;
  }
  public get securityGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['security_group_tags'] as { [key: string]: string } | undefined;
  }
  public set securityGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['security_group_tags'] = value;
  }
  public get skipFinalSnapshot(): boolean | undefined {
    return this.inputs['skip_final_snapshot'] as boolean | undefined;
  }
  public set skipFinalSnapshot(value: boolean | undefined) {
    this.inputs['skip_final_snapshot'] = value;
  }
  public get snapshotIdentifier(): string | undefined {
    return this.inputs['snapshot_identifier'] as string | undefined;
  }
  public set snapshotIdentifier(value: string | undefined) {
    this.inputs['snapshot_identifier'] = value;
  }
  public get sourceRegion(): string | undefined {
    return this.inputs['source_region'] as string | undefined;
  }
  public set sourceRegion(value: string | undefined) {
    this.inputs['source_region'] = value;
  }
  public get storageEncrypted(): boolean | undefined {
    return this.inputs['storage_encrypted'] as boolean | undefined;
  }
  public set storageEncrypted(value: boolean | undefined) {
    this.inputs['storage_encrypted'] = value;
  }
  public get subnets(): string[] | undefined {
    return this.inputs['subnets'] as string[] | undefined;
  }
  public set subnets(value: string[] | undefined) {
    this.inputs['subnets'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get username(): string | undefined {
    return this.inputs['username'] as string | undefined;
  }
  public set username(value: string | undefined) {
    this.inputs['username'] = value;
  }
  public get vpcId(): string | undefined {
    return this.inputs['vpc_id'] as string | undefined;
  }
  public set vpcId(value: string | undefined) {
    this.inputs['vpc_id'] = value;
  }
  public get vpcSecurityGroupIds(): string[] | undefined {
    return this.inputs['vpc_security_group_ids'] as string[] | undefined;
  }
  public set vpcSecurityGroupIds(value: string[] | undefined) {
    this.inputs['vpc_security_group_ids'] = value;
  }
  public get thisEnhancedMonitoringIamRoleArnOutput(): string {
    return this.interpolationForOutput('this_enhanced_monitoring_iam_role_arn')
  }
  public get thisEnhancedMonitoringIamRoleNameOutput(): string {
    return this.interpolationForOutput('this_enhanced_monitoring_iam_role_name')
  }
  public get thisEnhancedMonitoringIamRoleUniqueIdOutput(): string {
    return this.interpolationForOutput('this_enhanced_monitoring_iam_role_unique_id')
  }
  public get thisRdsClusterArnOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_arn')
  }
  public get thisRdsClusterDatabaseNameOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_database_name')
  }
  public get thisRdsClusterEndpointOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_endpoint')
  }
  public get thisRdsClusterEngineVersionOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_engine_version')
  }
  public get thisRdsClusterHostedZoneIdOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_hosted_zone_id')
  }
  public get thisRdsClusterIdOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_id')
  }
  public get thisRdsClusterInstanceEndpointsOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_instance_endpoints')
  }
  public get thisRdsClusterInstanceIdsOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_instance_ids')
  }
  public get thisRdsClusterMasterPasswordOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_master_password')
  }
  public get thisRdsClusterMasterUsernameOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_master_username')
  }
  public get thisRdsClusterPortOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_port')
  }
  public get thisRdsClusterReaderEndpointOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_reader_endpoint')
  }
  public get thisRdsClusterResourceIdOutput(): string {
    return this.interpolationForOutput('this_rds_cluster_resource_id')
  }
  public get thisSecurityGroupIdOutput(): string {
    return this.interpolationForOutput('this_security_group_id')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
"
`;

exports[`generate some modules 1`] = `
"// generated by cdktf get
// terraform-aws-modules/eks/aws
import { TerraformModule } from 'cdktf';
import { Construct } from 'constructs';
export interface TerraformAwsModulesEksAwsOptions {
  /**
   * Whether to attach the module managed cluster autoscaling iam policy to the default worker IAM role. This requires \`manage_worker_autoscaling_policy = true\`
   * @default true
   */
  readonly attachWorkerAutoscalingPolicy?: boolean;
  /**
   * Whether to attach the Amazon managed \`AmazonEKS_CNI_Policy\` IAM policy to the default worker IAM role. WARNING: If set \`false\` the permissions must be assigned to the \`aws-node\` DaemonSet pods via another method or nodes will not be able to join the cluster.
   * @default true
   */
  readonly attachWorkerCniPolicy?: boolean;
  /**
   * Whether to create a security group for the cluster or attach the cluster to \`cluster_security_group_id\`.
   * @default true
   */
  readonly clusterCreateSecurityGroup?: boolean;
  /**
   * Timeout value when creating the EKS cluster.
   * @default 15m
   */
  readonly clusterCreateTimeout?: string;
  /**
   * Timeout value when deleting the EKS cluster.
   * @default 15m
   */
  readonly clusterDeleteTimeout?: string;
  /**
   * A list of the desired control plane logging to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
   * @default 
   */
  readonly clusterEnabledLogTypes?: string[];
  /**
   * Indicates whether or not the Amazon EKS private API server endpoint is enabled.
   */
  readonly clusterEndpointPrivateAccess?: boolean;
  /**
   * Indicates whether or not the Amazon EKS public API server endpoint is enabled.
   * @default true
   */
  readonly clusterEndpointPublicAccess?: boolean;
  /**
   * IAM role name for the cluster. Only applicable if manage_cluster_iam_resources is set to false.
   */
  readonly clusterIamRoleName?: string;
  /**
   * If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
   */
  readonly clusterLogKmsKeyId?: string;
  /**
   * Number of days to retain log events. Default retention - 90 days.
   * @default 90
   */
  readonly clusterLogRetentionInDays?: number;
  /**
   * Name of the EKS cluster. Also used as a prefix in names of related resources.
   */
  readonly clusterName: string;
  /**
   * If provided, the EKS cluster will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the workers
   */
  readonly clusterSecurityGroupId?: string;
  /**
   * Kubernetes version to use for the EKS cluster.
   * @default 1.14
   */
  readonly clusterVersion?: string;
  /**
   * Where to save the Kubectl config file (if \`write_kubeconfig = true\`). Assumed to be a directory if the value ends with a forward slash \`/\`.
   * @default ./
   */
  readonly configOutputPath?: string;
  /**
   * If provided, all IAM roles will be created on this path.
   * @default /
   */
  readonly iamPath?: string;
  /**
   * Any additional arguments to pass to the authenticator such as the role to assume. e.g. [\\"-r\\", \\"MyEksRole\\"].
   * @default 
   */
  readonly kubeconfigAwsAuthenticatorAdditionalArgs?: string[];
  /**
   * Command to use to fetch AWS EKS credentials.
   * @default aws-iam-authenticator
   */
  readonly kubeconfigAwsAuthenticatorCommand?: string;
  /**
   * Default arguments passed to the authenticator command. Defaults to [token -i $cluster_name].
   * @default 
   */
  readonly kubeconfigAwsAuthenticatorCommandArgs?: string[];
  /**
   * Environment variables that should be used when executing the authenticator. e.g. { AWS_PROFILE = \\"eks\\"}.
   * @default [object Object]
   */
  readonly kubeconfigAwsAuthenticatorEnvVariables?: { [key: string]: string };
  /**
   * Override the default name used for items kubeconfig.
   */
  readonly kubeconfigName?: string;
  /**
   * Command to run for local-exec resources. Must be a shell-style interpreter. If you are on Windows Git Bash is a good choice.
   * @default /bin/sh,-c
   */
  readonly localExecInterpreter?: string[];
  /**
   * Whether to apply the aws-auth configmap file.
   * @default true
   */
  readonly manageAwsAuth?: boolean;
  /**
   * Whether to let the module manage cluster IAM resources. If set to false, cluster_iam_role_name must be specified.
   * @default true
   */
  readonly manageClusterIamResources?: boolean;
  /**
   * Whether to let the module manage the cluster autoscaling iam policy.
   * @default true
   */
  readonly manageWorkerAutoscalingPolicy?: boolean;
  /**
   * Whether to let the module manage worker IAM resources. If set to false, iam_instance_profile_name must be specified for workers.
   * @default true
   */
  readonly manageWorkerIamResources?: boolean;
  /**
   * Additional AWS account numbers to add to the aws-auth configmap. See examples/basic/variables.tf for example format.
   * @default 
   */
  readonly mapAccounts?: string[];
  /**
   * Additional IAM roles to add to the aws-auth configmap. See examples/basic/variables.tf for example format.
   * @default 
   */
  readonly mapRoles?: any;
  /**
   * Additional IAM users to add to the aws-auth configmap. See examples/basic/variables.tf for example format.
   * @default 
   */
  readonly mapUsers?: any;
  /**
   * If provided, all IAM roles will be created with this permissions boundary attached.
   */
  readonly permissionsBoundary?: string;
  /**
   * A list of subnets to place the EKS cluster and workers within.
   */
  readonly subnets: string[];
  /**
   * A map of tags to add to all resources.
   * @default [object Object]
   */
  readonly tags?: { [key: string]: string };
  /**
   * VPC where the cluster and workers will be deployed.
   */
  readonly vpcId: string;
  /**
   * A list of additional security group ids to attach to worker instances
   * @default 
   */
  readonly workerAdditionalSecurityGroupIds?: string[];
  /**
   * Name filter for AWS EKS worker AMI. If not provided, the latest official AMI for the specified 'cluster_version' is used.
   */
  readonly workerAmiNameFilter?: string;
  /**
   * Name filter for AWS EKS Windows worker AMI. If not provided, the latest official AMI for the specified 'cluster_version' is used.
   */
  readonly workerAmiNameFilterWindows?: string;
  /**
   * The ID of the owner for the AMI to use for the AWS EKS workers. Valid values are an AWS account ID, 'self' (the current account), or an AWS owner alias (e.g. 'amazon', 'aws-marketplace', 'microsoft').
   * @default 602401143452
   */
  readonly workerAmiOwnerId?: string;
  /**
   * The ID of the owner for the AMI to use for the AWS EKS Windows workers. Valid values are an AWS account ID, 'self' (the current account), or an AWS owner alias (e.g. 'amazon', 'aws-marketplace', 'microsoft').
   * @default 801119661308
   */
  readonly workerAmiOwnerIdWindows?: string;
  /**
   * Whether to create initial lifecycle hooks provided in worker groups.
   */
  readonly workerCreateInitialLifecycleHooks?: boolean;
  /**
   * Whether to create a security group for the workers or attach the workers to \`worker_security_group_id\`.
   * @default true
   */
  readonly workerCreateSecurityGroup?: boolean;
  /**
   * A list of maps defining worker group configurations to be defined using AWS Launch Configurations. See workers_group_defaults for valid keys.
   * @default 
   */
  readonly workerGroups?: any;
  /**
   * A list of maps defining worker group configurations to be defined using AWS Launch Templates. See workers_group_defaults for valid keys.
   * @default 
   */
  readonly workerGroupsLaunchTemplate?: any;
  /**
   * If provided, all workers will be attached to this security group. If not given, a security group will be created with necessary ingress/egress to work with the EKS cluster.
   */
  readonly workerSecurityGroupId?: string;
  /**
   * Minimum port number from which pods will accept communication. Must be changed to a lower value if some pods in your cluster will expose a port lower than 1025 (e.g. 22, 80, or 443).
   * @default 1025
   */
  readonly workerSgIngressFromPort?: number;
  /**
   * Additional policies to be added to workers
   * @default 
   */
  readonly workersAdditionalPolicies?: string[];
  /**
   * Override default values for target groups. See workers_group_defaults_defaults in local.tf for valid keys.
   * @default [object Object]
   */
  readonly workersGroupDefaults?: any;
  /**
   * User defined workers role name.
   */
  readonly workersRoleName?: string;
  /**
   * Whether to write the aws-auth configmap file.
   * @default true
   */
  readonly writeAwsAuthConfig?: boolean;
  /**
   * Whether to write a Kubectl config file containing the cluster configuration. Saved to \`config_output_path\`.
   * @default true
   */
  readonly writeKubeconfig?: boolean;
}
export class TerraformAwsModulesEksAws extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, options: TerraformAwsModulesEksAwsOptions) {
    super(scope, id, {
      source: 'terraform-aws-modules/eks/aws',
      version: '7.0.1',
    });
    this.attachWorkerAutoscalingPolicy = options.attachWorkerAutoscalingPolicy;
    this.attachWorkerCniPolicy = options.attachWorkerCniPolicy;
    this.clusterCreateSecurityGroup = options.clusterCreateSecurityGroup;
    this.clusterCreateTimeout = options.clusterCreateTimeout;
    this.clusterDeleteTimeout = options.clusterDeleteTimeout;
    this.clusterEnabledLogTypes = options.clusterEnabledLogTypes;
    this.clusterEndpointPrivateAccess = options.clusterEndpointPrivateAccess;
    this.clusterEndpointPublicAccess = options.clusterEndpointPublicAccess;
    this.clusterIamRoleName = options.clusterIamRoleName;
    this.clusterLogKmsKeyId = options.clusterLogKmsKeyId;
    this.clusterLogRetentionInDays = options.clusterLogRetentionInDays;
    this.clusterName = options.clusterName;
    this.clusterSecurityGroupId = options.clusterSecurityGroupId;
    this.clusterVersion = options.clusterVersion;
    this.configOutputPath = options.configOutputPath;
    this.iamPath = options.iamPath;
    this.kubeconfigAwsAuthenticatorAdditionalArgs = options.kubeconfigAwsAuthenticatorAdditionalArgs;
    this.kubeconfigAwsAuthenticatorCommand = options.kubeconfigAwsAuthenticatorCommand;
    this.kubeconfigAwsAuthenticatorCommandArgs = options.kubeconfigAwsAuthenticatorCommandArgs;
    this.kubeconfigAwsAuthenticatorEnvVariables = options.kubeconfigAwsAuthenticatorEnvVariables;
    this.kubeconfigName = options.kubeconfigName;
    this.localExecInterpreter = options.localExecInterpreter;
    this.manageAwsAuth = options.manageAwsAuth;
    this.manageClusterIamResources = options.manageClusterIamResources;
    this.manageWorkerAutoscalingPolicy = options.manageWorkerAutoscalingPolicy;
    this.manageWorkerIamResources = options.manageWorkerIamResources;
    this.mapAccounts = options.mapAccounts;
    this.mapRoles = options.mapRoles;
    this.mapUsers = options.mapUsers;
    this.permissionsBoundary = options.permissionsBoundary;
    this.subnets = options.subnets;
    this.tags = options.tags;
    this.vpcId = options.vpcId;
    this.workerAdditionalSecurityGroupIds = options.workerAdditionalSecurityGroupIds;
    this.workerAmiNameFilter = options.workerAmiNameFilter;
    this.workerAmiNameFilterWindows = options.workerAmiNameFilterWindows;
    this.workerAmiOwnerId = options.workerAmiOwnerId;
    this.workerAmiOwnerIdWindows = options.workerAmiOwnerIdWindows;
    this.workerCreateInitialLifecycleHooks = options.workerCreateInitialLifecycleHooks;
    this.workerCreateSecurityGroup = options.workerCreateSecurityGroup;
    this.workerGroups = options.workerGroups;
    this.workerGroupsLaunchTemplate = options.workerGroupsLaunchTemplate;
    this.workerSecurityGroupId = options.workerSecurityGroupId;
    this.workerSgIngressFromPort = options.workerSgIngressFromPort;
    this.workersAdditionalPolicies = options.workersAdditionalPolicies;
    this.workersGroupDefaults = options.workersGroupDefaults;
    this.workersRoleName = options.workersRoleName;
    this.writeAwsAuthConfig = options.writeAwsAuthConfig;
    this.writeKubeconfig = options.writeKubeconfig;
  }
  public get attachWorkerAutoscalingPolicy(): boolean | undefined {
    return this.inputs['attach_worker_autoscaling_policy'] as boolean | undefined;
  }
  public set attachWorkerAutoscalingPolicy(value: boolean | undefined) {
    this.inputs['attach_worker_autoscaling_policy'] = value;
  }
  public get attachWorkerCniPolicy(): boolean | undefined {
    return this.inputs['attach_worker_cni_policy'] as boolean | undefined;
  }
  public set attachWorkerCniPolicy(value: boolean | undefined) {
    this.inputs['attach_worker_cni_policy'] = value;
  }
  public get clusterCreateSecurityGroup(): boolean | undefined {
    return this.inputs['cluster_create_security_group'] as boolean | undefined;
  }
  public set clusterCreateSecurityGroup(value: boolean | undefined) {
    this.inputs['cluster_create_security_group'] = value;
  }
  public get clusterCreateTimeout(): string | undefined {
    return this.inputs['cluster_create_timeout'] as string | undefined;
  }
  public set clusterCreateTimeout(value: string | undefined) {
    this.inputs['cluster_create_timeout'] = value;
  }
  public get clusterDeleteTimeout(): string | undefined {
    return this.inputs['cluster_delete_timeout'] as string | undefined;
  }
  public set clusterDeleteTimeout(value: string | undefined) {
    this.inputs['cluster_delete_timeout'] = value;
  }
  public get clusterEnabledLogTypes(): string[] | undefined {
    return this.inputs['cluster_enabled_log_types'] as string[] | undefined;
  }
  public set clusterEnabledLogTypes(value: string[] | undefined) {
    this.inputs['cluster_enabled_log_types'] = value;
  }
  public get clusterEndpointPrivateAccess(): boolean | undefined {
    return this.inputs['cluster_endpoint_private_access'] as boolean | undefined;
  }
  public set clusterEndpointPrivateAccess(value: boolean | undefined) {
    this.inputs['cluster_endpoint_private_access'] = value;
  }
  public get clusterEndpointPublicAccess(): boolean | undefined {
    return this.inputs['cluster_endpoint_public_access'] as boolean | undefined;
  }
  public set clusterEndpointPublicAccess(value: boolean | undefined) {
    this.inputs['cluster_endpoint_public_access'] = value;
  }
  public get clusterIamRoleName(): string | undefined {
    return this.inputs['cluster_iam_role_name'] as string | undefined;
  }
  public set clusterIamRoleName(value: string | undefined) {
    this.inputs['cluster_iam_role_name'] = value;
  }
  public get clusterLogKmsKeyId(): string | undefined {
    return this.inputs['cluster_log_kms_key_id'] as string | undefined;
  }
  public set clusterLogKmsKeyId(value: string | undefined) {
    this.inputs['cluster_log_kms_key_id'] = value;
  }
  public get clusterLogRetentionInDays(): number | undefined {
    return this.inputs['cluster_log_retention_in_days'] as number | undefined;
  }
  public set clusterLogRetentionInDays(value: number | undefined) {
    this.inputs['cluster_log_retention_in_days'] = value;
  }
  public get clusterName(): string {
    return this.inputs['cluster_name'] as string;
  }
  public set clusterName(value: string) {
    this.inputs['cluster_name'] = value;
  }
  public get clusterSecurityGroupId(): string | undefined {
    return this.inputs['cluster_security_group_id'] as string | undefined;
  }
  public set clusterSecurityGroupId(value: string | undefined) {
    this.inputs['cluster_security_group_id'] = value;
  }
  public get clusterVersion(): string | undefined {
    return this.inputs['cluster_version'] as string | undefined;
  }
  public set clusterVersion(value: string | undefined) {
    this.inputs['cluster_version'] = value;
  }
  public get configOutputPath(): string | undefined {
    return this.inputs['config_output_path'] as string | undefined;
  }
  public set configOutputPath(value: string | undefined) {
    this.inputs['config_output_path'] = value;
  }
  public get iamPath(): string | undefined {
    return this.inputs['iam_path'] as string | undefined;
  }
  public set iamPath(value: string | undefined) {
    this.inputs['iam_path'] = value;
  }
  public get kubeconfigAwsAuthenticatorAdditionalArgs(): string[] | undefined {
    return this.inputs['kubeconfig_aws_authenticator_additional_args'] as string[] | undefined;
  }
  public set kubeconfigAwsAuthenticatorAdditionalArgs(value: string[] | undefined) {
    this.inputs['kubeconfig_aws_authenticator_additional_args'] = value;
  }
  public get kubeconfigAwsAuthenticatorCommand(): string | undefined {
    return this.inputs['kubeconfig_aws_authenticator_command'] as string | undefined;
  }
  public set kubeconfigAwsAuthenticatorCommand(value: string | undefined) {
    this.inputs['kubeconfig_aws_authenticator_command'] = value;
  }
  public get kubeconfigAwsAuthenticatorCommandArgs(): string[] | undefined {
    return this.inputs['kubeconfig_aws_authenticator_command_args'] as string[] | undefined;
  }
  public set kubeconfigAwsAuthenticatorCommandArgs(value: string[] | undefined) {
    this.inputs['kubeconfig_aws_authenticator_command_args'] = value;
  }
  public get kubeconfigAwsAuthenticatorEnvVariables(): { [key: string]: string } | undefined {
    return this.inputs['kubeconfig_aws_authenticator_env_variables'] as { [key: string]: string } | undefined;
  }
  public set kubeconfigAwsAuthenticatorEnvVariables(value: { [key: string]: string } | undefined) {
    this.inputs['kubeconfig_aws_authenticator_env_variables'] = value;
  }
  public get kubeconfigName(): string | undefined {
    return this.inputs['kubeconfig_name'] as string | undefined;
  }
  public set kubeconfigName(value: string | undefined) {
    this.inputs['kubeconfig_name'] = value;
  }
  public get localExecInterpreter(): string[] | undefined {
    return this.inputs['local_exec_interpreter'] as string[] | undefined;
  }
  public set localExecInterpreter(value: string[] | undefined) {
    this.inputs['local_exec_interpreter'] = value;
  }
  public get manageAwsAuth(): boolean | undefined {
    return this.inputs['manage_aws_auth'] as boolean | undefined;
  }
  public set manageAwsAuth(value: boolean | undefined) {
    this.inputs['manage_aws_auth'] = value;
  }
  public get manageClusterIamResources(): boolean | undefined {
    return this.inputs['manage_cluster_iam_resources'] as boolean | undefined;
  }
  public set manageClusterIamResources(value: boolean | undefined) {
    this.inputs['manage_cluster_iam_resources'] = value;
  }
  public get manageWorkerAutoscalingPolicy(): boolean | undefined {
    return this.inputs['manage_worker_autoscaling_policy'] as boolean | undefined;
  }
  public set manageWorkerAutoscalingPolicy(value: boolean | undefined) {
    this.inputs['manage_worker_autoscaling_policy'] = value;
  }
  public get manageWorkerIamResources(): boolean | undefined {
    return this.inputs['manage_worker_iam_resources'] as boolean | undefined;
  }
  public set manageWorkerIamResources(value: boolean | undefined) {
    this.inputs['manage_worker_iam_resources'] = value;
  }
  public get mapAccounts(): string[] | undefined {
    return this.inputs['map_accounts'] as string[] | undefined;
  }
  public set mapAccounts(value: string[] | undefined) {
    this.inputs['map_accounts'] = value;
  }
  public get mapRoles(): any | undefined {
    return this.inputs['map_roles'] as any | undefined;
  }
  public set mapRoles(value: any | undefined) {
    this.inputs['map_roles'] = value;
  }
  public get mapUsers(): any | undefined {
    return this.inputs['map_users'] as any | undefined;
  }
  public set mapUsers(value: any | undefined) {
    this.inputs['map_users'] = value;
  }
  public get permissionsBoundary(): string | undefined {
    return this.inputs['permissions_boundary'] as string | undefined;
  }
  public set permissionsBoundary(value: string | undefined) {
    this.inputs['permissions_boundary'] = value;
  }
  public get subnets(): string[] {
    return this.inputs['subnets'] as string[];
  }
  public set subnets(value: string[]) {
    this.inputs['subnets'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get vpcId(): string {
    return this.inputs['vpc_id'] as string;
  }
  public set vpcId(value: string) {
    this.inputs['vpc_id'] = value;
  }
  public get workerAdditionalSecurityGroupIds(): string[] | undefined {
    return this.inputs['worker_additional_security_group_ids'] as string[] | undefined;
  }
  public set workerAdditionalSecurityGroupIds(value: string[] | undefined) {
    this.inputs['worker_additional_security_group_ids'] = value;
  }
  public get workerAmiNameFilter(): string | undefined {
    return this.inputs['worker_ami_name_filter'] as string | undefined;
  }
  public set workerAmiNameFilter(value: string | undefined) {
    this.inputs['worker_ami_name_filter'] = value;
  }
  public get workerAmiNameFilterWindows(): string | undefined {
    return this.inputs['worker_ami_name_filter_windows'] as string | undefined;
  }
  public set workerAmiNameFilterWindows(value: string | undefined) {
    this.inputs['worker_ami_name_filter_windows'] = value;
  }
  public get workerAmiOwnerId(): string | undefined {
    return this.inputs['worker_ami_owner_id'] as string | undefined;
  }
  public set workerAmiOwnerId(value: string | undefined) {
    this.inputs['worker_ami_owner_id'] = value;
  }
  public get workerAmiOwnerIdWindows(): string | undefined {
    return this.inputs['worker_ami_owner_id_windows'] as string | undefined;
  }
  public set workerAmiOwnerIdWindows(value: string | undefined) {
    this.inputs['worker_ami_owner_id_windows'] = value;
  }
  public get workerCreateInitialLifecycleHooks(): boolean | undefined {
    return this.inputs['worker_create_initial_lifecycle_hooks'] as boolean | undefined;
  }
  public set workerCreateInitialLifecycleHooks(value: boolean | undefined) {
    this.inputs['worker_create_initial_lifecycle_hooks'] = value;
  }
  public get workerCreateSecurityGroup(): boolean | undefined {
    return this.inputs['worker_create_security_group'] as boolean | undefined;
  }
  public set workerCreateSecurityGroup(value: boolean | undefined) {
    this.inputs['worker_create_security_group'] = value;
  }
  public get workerGroups(): any | undefined {
    return this.inputs['worker_groups'] as any | undefined;
  }
  public set workerGroups(value: any | undefined) {
    this.inputs['worker_groups'] = value;
  }
  public get workerGroupsLaunchTemplate(): any | undefined {
    return this.inputs['worker_groups_launch_template'] as any | undefined;
  }
  public set workerGroupsLaunchTemplate(value: any | undefined) {
    this.inputs['worker_groups_launch_template'] = value;
  }
  public get workerSecurityGroupId(): string | undefined {
    return this.inputs['worker_security_group_id'] as string | undefined;
  }
  public set workerSecurityGroupId(value: string | undefined) {
    this.inputs['worker_security_group_id'] = value;
  }
  public get workerSgIngressFromPort(): number | undefined {
    return this.inputs['worker_sg_ingress_from_port'] as number | undefined;
  }
  public set workerSgIngressFromPort(value: number | undefined) {
    this.inputs['worker_sg_ingress_from_port'] = value;
  }
  public get workersAdditionalPolicies(): string[] | undefined {
    return this.inputs['workers_additional_policies'] as string[] | undefined;
  }
  public set workersAdditionalPolicies(value: string[] | undefined) {
    this.inputs['workers_additional_policies'] = value;
  }
  public get workersGroupDefaults(): any | undefined {
    return this.inputs['workers_group_defaults'] as any | undefined;
  }
  public set workersGroupDefaults(value: any | undefined) {
    this.inputs['workers_group_defaults'] = value;
  }
  public get workersRoleName(): string | undefined {
    return this.inputs['workers_role_name'] as string | undefined;
  }
  public set workersRoleName(value: string | undefined) {
    this.inputs['workers_role_name'] = value;
  }
  public get writeAwsAuthConfig(): boolean | undefined {
    return this.inputs['write_aws_auth_config'] as boolean | undefined;
  }
  public set writeAwsAuthConfig(value: boolean | undefined) {
    this.inputs['write_aws_auth_config'] = value;
  }
  public get writeKubeconfig(): boolean | undefined {
    return this.inputs['write_kubeconfig'] as boolean | undefined;
  }
  public set writeKubeconfig(value: boolean | undefined) {
    this.inputs['write_kubeconfig'] = value;
  }
  public get cloudwatchLogGroupNameOutput(): string {
    return this.interpolationForOutput('cloudwatch_log_group_name')
  }
  public get clusterArnOutput(): string {
    return this.interpolationForOutput('cluster_arn')
  }
  public get clusterCertificateAuthorityDataOutput(): string {
    return this.interpolationForOutput('cluster_certificate_authority_data')
  }
  public get clusterEndpointOutput(): string {
    return this.interpolationForOutput('cluster_endpoint')
  }
  public get clusterIamRoleArnOutput(): string {
    return this.interpolationForOutput('cluster_iam_role_arn')
  }
  public get clusterIamRoleNameOutput(): string {
    return this.interpolationForOutput('cluster_iam_role_name')
  }
  public get clusterIdOutput(): string {
    return this.interpolationForOutput('cluster_id')
  }
  public get clusterOidcIssuerUrlOutput(): string {
    return this.interpolationForOutput('cluster_oidc_issuer_url')
  }
  public get clusterSecurityGroupIdOutput(): string {
    return this.interpolationForOutput('cluster_security_group_id')
  }
  public get clusterVersionOutput(): string {
    return this.interpolationForOutput('cluster_version')
  }
  public get configMapAwsAuthOutput(): string {
    return this.interpolationForOutput('config_map_aws_auth')
  }
  public get kubeconfigOutput(): string {
    return this.interpolationForOutput('kubeconfig')
  }
  public get kubeconfigFilenameOutput(): string {
    return this.interpolationForOutput('kubeconfig_filename')
  }
  public get workerAutoscalingPolicyArnOutput(): string {
    return this.interpolationForOutput('worker_autoscaling_policy_arn')
  }
  public get workerAutoscalingPolicyNameOutput(): string {
    return this.interpolationForOutput('worker_autoscaling_policy_name')
  }
  public get workerIamInstanceProfileArnsOutput(): string {
    return this.interpolationForOutput('worker_iam_instance_profile_arns')
  }
  public get workerIamInstanceProfileNamesOutput(): string {
    return this.interpolationForOutput('worker_iam_instance_profile_names')
  }
  public get workerIamRoleArnOutput(): string {
    return this.interpolationForOutput('worker_iam_role_arn')
  }
  public get workerIamRoleNameOutput(): string {
    return this.interpolationForOutput('worker_iam_role_name')
  }
  public get workerSecurityGroupIdOutput(): string {
    return this.interpolationForOutput('worker_security_group_id')
  }
  public get workersAsgArnsOutput(): string {
    return this.interpolationForOutput('workers_asg_arns')
  }
  public get workersAsgNamesOutput(): string {
    return this.interpolationForOutput('workers_asg_names')
  }
  public get workersDefaultAmiIdOutput(): string {
    return this.interpolationForOutput('workers_default_ami_id')
  }
  public get workersLaunchTemplateArnsOutput(): string {
    return this.interpolationForOutput('workers_launch_template_arns')
  }
  public get workersLaunchTemplateIdsOutput(): string {
    return this.interpolationForOutput('workers_launch_template_ids')
  }
  public get workersLaunchTemplateLatestVersionsOutput(): string {
    return this.interpolationForOutput('workers_launch_template_latest_versions')
  }
  public get workersUserDataOutput(): string {
    return this.interpolationForOutput('workers_user_data')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
"
`;

exports[`no module outputs 1`] = `
"// generated by cdktf get
// ./module
import { TerraformModule } from 'cdktf';
import { Construct } from 'constructs';
export interface ModuleOptions {
  /**
   * Flag to optionally disable usage of this module.
   * @default true
   */
  readonly enabled?: boolean;
}
export class Module extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, options: ModuleOptions = {}) {
    super(scope, id, {
      source: './module',
    });
    this.enabled = options.enabled;
  }
  public get enabled(): boolean | undefined {
    return this.inputs['enabled'] as boolean | undefined;
  }
  public set enabled(value: boolean | undefined) {
    this.inputs['enabled'] = value;
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
"
`;

exports[`typeless variables 1`] = `
"// generated by cdktf get
// ./module
import { TerraformModule } from 'cdktf';
import { Construct } from 'constructs';
export interface ModuleOptions {
  /**
   * My example var without type set, but with default
   * @default 1
   */
  readonly myDefaultTypevar?: number;
  /**
   * My example var without type set
   */
  readonly myTypelessVar: any;
}
export class Module extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, options: ModuleOptions) {
    super(scope, id, {
      source: './module',
    });
    this.myDefaultTypevar = options.myDefaultTypevar;
    this.myTypelessVar = options.myTypelessVar;
  }
  public get myDefaultTypevar(): number | undefined {
    return this.inputs['my_default_typevar'] as number | undefined;
  }
  public set myDefaultTypevar(value: number | undefined) {
    this.inputs['my_default_typevar'] = value;
  }
  public get myTypelessVar(): any {
    return this.inputs['my_typeless_var'] as any;
  }
  public set myTypelessVar(value: any) {
    this.inputs['my_typeless_var'] = value;
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
"
`;
