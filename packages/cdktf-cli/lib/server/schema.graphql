type Query {
  hello: String
  hallo: String
}

input WatchInput {
  targetDir: String!
  targetStack: String
  synthCommand: String!
  autoApprove: Boolean
}

enum PlannedResourceAction {
  CREATE,
  UPDATE,
  DELETE,
  READ,
  NO_OP,
}

enum DeployingResourceDeployState {
  WAITING,
  UPDATING,
  UPDATED,
  CREATING,
  CREATED,
  DESTROYING,
  DESTROYED,
  SUCCESS,
  ERROR,
}

type DeployingResource {
  id: String!
  action: PlannedResourceAction!
  deployState: DeployingResourceDeployState!
  changedAt: Float! # TODO: change this to custom date scalar
}

enum STATUS {
 IDLE,
 SYNTHESIZING,
 INITIALIZING,
 PLANNING,
 DEPLOYING,
}

type Stack {
  name: String!
  constructPath: String!
  synthesizedStackPath: String!
  workingDirectory: String!
}

type WatchState {
  status: STATUS!
  stacks: [Stack]!
  resources: [DeployingResource]!
}

type Subscription {
  watch(inputs: WatchInput): WatchState
}

